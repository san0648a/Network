//SERVER

/* UDP Echo Server */

#include <sys/socket.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

struct sockaddr_in serv_addr, cli_addr;
int sockfd, r, w;
socklen_t cli_len;

unsigned short serv_port = 25022;
char serv_ip[] = "127.0.0.1";

char buff[128];

int main() {
    bzero(&serv_addr, sizeof(serv_addr));

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(serv_port);
    inet_aton(serv_ip, &serv_addr.sin_addr);

    printf("\nUDP ECHO SERVER.\n");

    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("SERVER ERROR: Cannot create socket");
        exit(1);
    }

    if (bind(sockfd, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) < 0) {
        perror("SERVER ERROR: Cannot bind");
        close(sockfd);
        exit(1);
    }

    cli_len = sizeof(cli_addr);

    while (1) {
        printf("\nSERVER: Waiting for message from client...\n");

        bzero(buff, sizeof(buff));
        r = recvfrom(sockfd, buff, sizeof(buff) - 1, 0, (struct sockaddr*)&cli_addr, &cli_len);

        if (r < 0) {
            perror("SERVER ERROR: Cannot receive message");
            continue;
        }

        buff[r] = '\0';
        printf("SERVER: Received '%s' from %s\n", buff, inet_ntoa(cli_addr.sin_addr));

        w = sendto(sockfd, buff, strlen(buff), 0, (struct sockaddr*)&cli_addr, cli_len);
        if (w < 0) {
            perror("SERVER ERROR: Cannot send message");
        } else {
            printf("SERVER: Echoed back '%s' to %s\n", buff, inet_ntoa(cli_addr.sin_addr));
        }
    }

    close(sockfd);
    return 0;
}


//CLIENT

/* UDP Echo Client */

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>

struct sockaddr_in serv_addr;
int sockfd, r, w;
socklen_t serv_len;

unsigned short serv_port = 25022;
char serv_ip[] = "127.0.0.1";

char sbuff[128] = "===good night===";
char rbuff[128];

int main() {
    bzero(&serv_addr, sizeof(serv_addr));

    serv_addr.sin_family = AF_INET;
    serv_addr.sin_port = htons(serv_port);
    inet_aton(serv_ip, &serv_addr.sin_addr);

    printf("\nUDP ECHO CLIENT.\n");

    if ((sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
        perror("CLIENT ERROR: Cannot create socket");
        exit(1);
    }

    serv_len = sizeof(serv_addr);

    w = sendto(sockfd, sbuff, strlen(sbuff), 0, (struct sockaddr*)&serv_addr, serv_len);
    if (w < 0) {
        perror("CLIENT ERROR: Cannot send message");
        close(sockfd);
        exit(1);
    }

    printf("\nCLIENT: Message sent to echo server.\n");

    r = recvfrom(sockfd, rbuff, sizeof(rbuff) - 1, 0, NULL, NULL);
    if (r < 0) {
        perror("CLIENT ERROR: Cannot receive message");
    } else {
        rbuff[r] = '\0';
        printf("\nCLIENT: Message from echo server: %s\n", rbuff);
    }

    close(sockfd);
    return 0;
}
